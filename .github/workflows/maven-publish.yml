name: CodeQL Analysis with Report

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  analyze:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      # 初始化 CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'java'
          queries: +security-extended

      # 编译项目
      - name: Build project
        run: mvn clean package -DskipTests

      # CodeQL 分析（确保输出到固定路径）
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: 'java-security'
          output: ./codeql-results  # 使用相对路径

      # ========== 报告生成 ==========
      - name: Verify SARIF file exists
        id: check-sarif
        run: |
          if [ ! -f "./codeql-results/results.sarif" ]; then
            echo "::error::SARIF file not found at ./codeql-results/results.sarif"
            ls -la ./codeql-results/  # 调试目录内容
            exit 1
          fi
          echo "sarif_file=./codeql-results/results.sarif" >> $GITHUB_OUTPUT

      - name: Setup Tools
        if: steps.check-sarif.outputs.sarif_file
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate Markdown Report
        if: steps.check-sarif.outputs.sarif_file
        run: |
          echo "# CodeQL 安全扫描报告" > report.md
          echo "**扫描时间**: $(date '+%Y-%m-%d %H:%M:%S')" >> report.md
          echo "\n## 漏洞统计" >> report.md
          
          # 使用绝对路径确保文件访问
          SARIF_FILE="${{ steps.check-sarif.outputs.sarif_file }}"
          jq -r '.runs[0].results | group_by(.level) | map("• \(.[0].level | ascii_upcase): \(length)个") | join("\n")' "$SARIF_FILE" >> report.md
          
          echo "\n## 详细问题列表" >> report.md
          jq -r '.runs[0].results | sort_by(.level) | reverse | .[] | "### \(.ruleId)\n" +
                 "**严重程度**: \(.level)\n" +
                 "**文件**: \(.locations[0].physicalLocation.artifactLocation.uri):\(.locations[0].physicalLocation.region.startLine)\n" +
                 "**描述**: \(.message.text)\n" +
                 "**修复建议**: \(if .resolution then .resolution.markdown else "无" end)\n"' \
              "$SARIF_FILE" >> report.md

      - name: Generate Simplified JSON
        if: steps.check-sarif.outputs.sarif_file
        run: |
          jq '.runs[0].results | map({
            ruleId: .ruleId,
            level: .level,
            message: .message.text,
            file: .locations[0].physicalLocation.artifactLocation.uri,
            line: .locations[0].physicalLocation.region.startLine
          })' "${{ steps.check-sarif.outputs.sarif_file }}" > report.json

      # 上传报告（即使分析失败也上传现有文件）
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            ./report.md
            ./report.json
            ./codeql-results/results.sarif
          if-no-files-found: warn  # 如果没有报告文件也不报错