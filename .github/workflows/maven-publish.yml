name: Maven CI/CD Pipeline

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: mvn打包
        run: mvn -B clean package --file pom.xml

      - name: 上传target目录
        uses: actions/upload-artifact@v4
        with:
          name: target-dir
          path: target
          retention-days: 1

      - name: 上传JAR文件
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: target/*.jar

  code-scan:
    name: CodeQL Analysis with Fail-on-High-Security
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          upload: true
          # 如果发现 High 级别漏洞，自动失败
          failure-level: high

  # 代码扫描任务 - 保持您命名的 code-scan
  deploy:
    needs: [build, code-scan]
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: 下载JAR文件
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: artifacts

      - name: 部署到服务器
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          JAR_FILE=$(ls artifacts/*.jar)
          echo "找到JAR文件: $JAR_FILE"
          
          scp -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key "$JAR_FILE" ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/deployer/app/
          
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "sudo systemctl restart myapp"