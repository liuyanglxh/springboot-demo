name: CodeQL Security Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  analyze:
    name: Generate Security Report
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
      # 步骤1：检出代码
      - uses: actions/checkout@v4

      # 步骤2：初始化 CodeQL (v3语法)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          queries: security-extended

      # 步骤3：编译项目
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 步骤4：运行分析 (v3语法)
      - name: Analyze with CodeQL
        uses: github/codeql-action/analyze@v3
        continue-on-error: true
        env:
          CODEQL_ACTION_DISABLE_SARIF_REDACTION: true  # 确保获取完整报告

      # 步骤5：自动定位结果文件
      - name: Locate Results
        id: locate-results
        run: |
          SARIF_PATH=$(find . -name "results.sarif" -print -quit)
          if [ -f "$SARIF_PATH" ]; then
            echo "sarif_path=${SARIF_PATH}" >> $GITHUB_OUTPUT
            echo "report_dir=$(dirname ${SARIF_PATH})" >> $GITHUB_OUTPUT
          else
            echo "::warning::No SARIF file found in workspace"
            find . -name "*.sarif" || echo "No SARIF files detected"
          fi

      # 步骤6：生成智能报告
      - name: Generate Report
        if: steps.locate-results.outputs.sarif_path
        run: |
          mkdir -p ./security-report
          
          # 主报告文件
          echo "# 安全扫描报告" > ./security-report/README.md
          echo "**扫描时间**: $(date '+%Y-%m-%d %H:%M:%S')" >> ./security-report/README.md
          
          # 自动处理不同位置的SARIF文件
          SARIF_FILE="${{ steps.locate-results.outputs.sarif_path }}"
          
          # 漏洞统计
          {
            echo "## 扫描概览"
            jq -r '
              .runs[0].results | 
              if length > 0 then
                "发现安全问题: \(length)个\n" +
                (group_by(.level) | 
                map("• \(.[0].level | ascii_upcase): \(length)个") | 
                join("\n"))
              else
                "✅ 未发现高危漏洞"
              end
            ' "${SARIF_FILE}"
          } >> ./security-report/README.md

          # 详细结果 (最多显示20条)
          {
            echo "\n## 详细结果"
            jq -r '
              .runs[0].results | 
              if length > 0 then
                .[0:20][] | 
                "### \(.ruleId)\n" +
                "**等级**: \(.level)\n" +
                "**位置**: `\(.locations[0].physicalLocation.artifactLocation.uri)` " +
                "(行: \(.locations[0].physicalLocation.region.startLine))\n" +
                "**描述**: \(.message.text)\n"
              else
                "无漏洞细节"
              end
            ' "${SARIF_FILE}"
          } >> ./security-report/README.md

          # 原始数据备份
          cp "${SARIF_FILE}" ./security-report/codeql-results.sarif

      # 步骤7：上传结果
      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            ./security-report/*
          if-no-files-found: warn