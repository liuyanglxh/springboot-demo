# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:  [master]

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: mvn打包
      run: mvn -B package --file pom.xml

    - name: 上传
      uses: actions/upload-artifact@v4
      with:
        name: jar-file
        path: target/*.jar

  analyze:
    needs: build  # 必须在构建之后执行
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 复用构建步骤生成的字节码
      - name: Prepare for CodeQL
        run: |
          # 复制构建产物（包含编译后的字节码）
          cp -R ${{ github.workspace }}/target .

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'java'
          paths: 'src/main/java'  # 明确源代码路径

      # 使用已编译的字节码，无需重新编译
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          fail-on-severity: error  # 错误级别问题导致失败
          fail-on-errors: true     # 任何分析错误导致失败

      # 确保检测到问题后终止流水线
      - name: Fail on Critical Issues
        if: failure() || success()
        run: |
          if [ -f codeql-analysis.sarif ] && grep -q '"level": "error"' codeql-analysis.sarif; then
            echo "##[error]Critical security issues found!"
            exit 1
          fi

  deploy:
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: artifacts  # 下载到 artifacts 目录（无前导点）

      - name: Upload to Server
        run: |
          # 将私钥写入文件
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # 获取 JAR 文件名
          JAR_FILE=$(ls artifacts/*.jar)
          echo "找到 JAR 文件: $JAR_FILE"
          
          # 使用 SCP 上传
          scp -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key "$JAR_FILE" ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/deployer/app/
          
          # 验证上传
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "ls -lh /home/deployer/app"
          
          # 启动服务
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "sudo systemctl restart myapp"